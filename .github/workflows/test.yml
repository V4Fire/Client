name: build

on:
  push:
    branches: [master, v3]

  pull_request:
    branches: [master, v3]

jobs:

  # Run components tests
  components:
    runs-on: windows-latest

    strategy:
      matrix:
        node-version: [14.1]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'

      - name: Build tsconfig
        run: npx gulp build:tsconfig

      - name: Run components test
        run: npm run test:components


  # Run typescript check
  typescript:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.1]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'

      - name: Build tsconfig
        run: npx gulp build:tsconfig

      - name: Run typescript test
        run: npm run test:typescript


  # Run eslint check
  eslint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.1]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci
        if: steps.npm-cache.outputs.cache-hit != 'true'

      - name: Build tsconfig
        run: npx gulp build:tsconfig

      - name: Run javascript test
        run: npm run test:eslint
