name: build

on:
  push:
    branches: [master, v4, v4-rc]

  pull_request:
    branches: [master, v4, v4-rc]

jobs:
  # Build the project
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Build project
        run: yarn webpack

      - name: Save build in cache
        id: cache-build
        uses: actions/cache/save@v4
        with:
          path: dist
          key: cache-${{ github.sha }}


  # Run linters
  linters:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run tests
        run: yarn test:linters


  # Run playwright tests
  components:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: build

    strategy:
      matrix:
        node-version: [20.x]
        shard-index: [1, 2, 3, 4]
        shard-total: [4]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Restore build from cache
        id: cache-build
        uses: actions/cache/restore@v4
        with:
          path: dist
          key: cache-${{ github.sha }}

      - name: Install dependencies
        run: yarn

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run components' unit tests
        run: yarn test:unit --shard=${{ matrix.shard-index }}/${{ matrix.shard-total }}


  # Run module tests
  modules:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: build

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: Restore build from cache
        id: cache-build
        uses: actions/cache/restore@v4
        with:
           path: dist
           key: cache-${{ github.sha }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run modules tests
        run: yarn test:ci:jest
