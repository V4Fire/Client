name: build

on:
  push:
    branches: [master, v4]

  pull_request:
    branches: [master, v4]

jobs:
  # Run playwright tests
  components:
    runs-on: windows-latest
    timeout-minutes: 60

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build tsconfig
        run: npm run build:tsconfig

      - name: Build project
        run: npx webpack

      - name: Run components' unit tests
        run: npm run test:unit -- --reporter github


  # Run module tests
  modules:
    runs-on: ubuntu-latest
    env:
      PROGRESS: false

    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/cache@v2

        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build tsconfig
        run: npm run build:tsconfig

      - name: Build the project
        run: npx webpack

      - name: Run modules' tests
        run: npm run test:jasmine

  # Run linters
  linters:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm ci

      - name: Build tsconfig
        run: npm run build:tsconfig

      - name: Run tests
        run: npm run test:linters
