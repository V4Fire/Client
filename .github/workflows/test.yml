name: build

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

jobs:
  # Run playwright tests
  unit-tests:
    runs-on: windows-latest
    timeout-minutes: 60

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Build project
        run: yarn webpack

      - name: Run components' unit tests
        run: yarn test:unit --reporter github

  # Run components tests
  components:
    runs-on: windows-latest
    timeout-minutes: 60

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run components' tests
        run: yarn test:components:chrome

  components-fat-html:
    runs-on: windows-latest
    timeout-minutes: 60

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run components' tests with --fat-html --mode production
        run: yarn test:components:chrome --fat-html --mode production

  components-fat-html-es5:
    runs-on: windows-latest
    timeout-minutes: 60

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run components' tests with --fat-html --es ES5
        run: yarn test:components:chrome --fat-html --es ES5

  # Run module tests
  modules:
    runs-on: ubuntu-latest
    env:
      PROGRESS: false

    timeout-minutes: 30

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache: 'yarn'
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Build the project
        run: yarn webpack

      - name: Run modules' tests
        run: yarn test:jasmine

  # Run linters
  linters:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn

      - name: Build tsconfig
        run: yarn build:tsconfig

      - name: Run tests
        run: yarn test:linters
