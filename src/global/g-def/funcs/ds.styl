/*!
 * V4Fire Client Core
 * https://github.com/V4Fire/Client
 *
 * Released under the MIT license
 * https://github.com/V4Fire/Client/blob/master/LICENSE
 */

/**
 * Returns a color from the global kits or from a design system
 *
 * @param {string} $kit
 * @param {number|string} [$id]
 * @param {boolean=} [$reserved]
 * @param {boolean=} [$base]
 */
c($kit, $id = null, $reserved = false, $base = false)
	if getDSFieldValue("colors")
		$color = getDSColor($kit, $id)
		$value = type($color) == "string" ? convert($color) : $color
		return $value

	getGlobalColor($kit, $id || null, $reserved, $base)

/**
 * Returns a background rule from design system styles by the specified name and parameters
 *
 * @param {string} $name
 * @param {string=} [$repeat]
 * @param {string=} [$align]
 */
i($name, $repeat = no-repeat, $align = center)
	background img(join(".", $name svg), true) $repeat $align

	$chunks = split("/", $name)

	if length($chunks) > 1 and typeof(convert($chunks[0])) == "unit"
		size unit(convert($chunks[0]), "px")

/**
 * Returns text style rules from design system styles by the specified name
 * @param {string} $name - text style name
 */
t($name)
	$name = replaceByRegExp($name, "[ \/]", "-", "g")
	$obj = getDSTextStyles($name)

	if $obj
		interpolate-props($obj)

/**
 * Returns a border-radius rule from design system styles by the specified name and position
 *
 * @param {string} $name - border-radius DS name
 * @param {string} [$pos] - %s tokens-styled string for multiple border-radius values
 *
 * @example
 * r(big, '$s 0 $s') -> border-radius 16px 0 16px
 */
r($name, $pos = null)
	$val = getDSFieldValue("rounding", $name)

	if $val
		if $pos
			border-radius convert(replace("%s", s("%s", $val), $pos))

		else
			border-radius type($val) == "string" ? convert($val) : $val

/**
 * Generates necessary rules for the specified component options and factory.
 * The function is used to integrate a design system.
 *
 * @param $p
 * @param $fn
 */
generateRules($p, $fn)
	if !$p.skipDsInheritance
		//#if runtime has ds/include-vars
		$fn($p.__vars__)
		//#endif

		//#unless runtime has ds/include-vars
		$fn($p)
		//#endunless

		//#if runtime has ds/diff
		&_diff_true
			$fn($p.__diffVars__)

		&_diff_false
			$fn($p.__vars__)
		//#endif

		return

	return
